/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'application'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo1.maven.org/maven2/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.apache.iceberg.iceberg.spark.runtime.v3.v5.v2.v13
    api libs.org.testcontainers.testcontainers
    api libs.org.apache.hadoop.hadoop.client
    api libs.org.apache.hadoop.hadoop.aws
    api libs.org.apache.spark.spark.core.v2.v13
    api libs.org.apache.spark.spark.sql.v2.v13
    api libs.io.minio.minio
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.software.amazon.awssdk.bundle
    api libs.org.apache.iceberg.iceberg.aws
    api libs.org.apache.hadoop.hadoop.common
    api libs.com.google.guava.guava
    api libs.org.apache.parquet.parquet.hadoop
    api libs.com.amazonaws.aws.java.sdk.bundle
    api libs.io.reactivex.rxjava
    api libs.org.apache.arrow.flight.sql.jdbc.driver
}
configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'iceberg-examples'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
application {
    applicationDefaultJvmArgs = [
            '--add-exports', 'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED'
    ]
}
task runWithArgs(type: JavaExec) {
    mainClass = 'ParquetToS3'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = [
            '--add-exports', 'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED'
    ]
}
